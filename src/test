function validate(birthDay, birthMonth, birthYear) {
  //  if input field is empty
  if (!birthDay || !birthMonth || !birthYear) {
    setError("This field is required");
    Init();
    return;
  }
}
  // input validation
  let tempErrors = { birthDay: "", birthMonth: "", birthYear: "" };
  const parsedDay = parseInt(birthDay, 10);
  const parsedMonth = parseInt(birthMonth, 10);
  const parsedYear = parseInt(birthYear, 10);
  // Check if month is valid
  if (parsedMonth < 1 || parsedMonth > 12) {
    // setError("Must be a valid month.");
    tempErrors.birthMonth = "Must be a valid month.";
    return false;
  }
  // Check if day is valid considering different months and leap years
  const daysInMonth = new Date(parsedYear, parsedMonth, 0).getDate();
  if (parsedDay < 1 || parsedDay > daysInMonth) {
    // setError("Must be a valid day.");
    tempErrors.birthDay = "Must be a valid day.";

    return false;
  }
  // Check if year is reasonable (not in the future, not too old)
  const currentYear = new Date().getFullYear();
  if (parsedYear < 1900 || parsedYear > currentYear) {
    // setError("Must be in the past.");
    tempErrors.birthYear = "Must be in the past.";

    return false;
  }
  setError(tempErrors);
  setError(""); // Clear any previous error
  // return true if no errors
  return Object.values(tempErrors).every((x) => x === "");
}
// to focus on the input field

//  calculate the age
function calculateAge(day, month, year) {
  const birthDate = new Date(year, month - 1, day);
  const currentDate = new Date();
  let ageYear = currentDate.getFullYear() - birthDate.getFullYear();
  let ageMonth = currentDate.getMonth() - birthDate.getMonth();
  let ageDay = currentDate.getDate() - birthDate.getDate();

  if (ageDay < 0) {
    ageMonth--;
    ageDay += new Date(birthYear, birthMonth, 0).getDate();
  }
  if (ageMonth < 0) {
    ageYear--;
    ageMonth += 12;
  }
  return {
    year: ageYear,
    month: ageMonth,
    day: ageDay,
  };
}
if (validate()) {
  const result = calculateAge(day, month, year);
  setAge(result);
}
